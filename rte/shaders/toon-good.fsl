#if 1
uniform sampler2D  sampler;

mat3  ycbcr_to_rgb_mat = mat3( 1.164, 0.000, 1.596, 1.164, -0.391, -0.813, 1.164, 2.018, 0.000 );
//vec3  ycbcr_to_rgb_vec = vec3( -0.87416470588235, +0.53132549019608, -1.08599215686274 );
vec3  ycbcr_to_rgb_vec = vec3( -0.87416470588235, +0.53132549019608, -1.08599215686274 );



mat3  tm2 = mat3( 1.0, 0.0, 1.402, 1.0, -3.4413, -0.714136, 1.0, 1.772, 0);
//mat3  tm2 = mat3( 1.0, 1.0, 1.0, 1.402, -3.4413, 1.772, 1.0, 1.0, 0.0);

void main(void)
{
	// col.rgb is the YCbCr (YUV) color space on input, RGB on output.

//    vec4 col = texture2D(sampler,gl_TexCoord[0].xy);
    vec4 cc = texture2D(sampler,gl_TexCoord[0].xy);

vec4 col;
col.rgb = vec3(cc.g,cc.b,cc.r);
col.a = 1.0;

//col.rgb = vec3( dot( ycbcr_to_rgb_mat[ 0 ], col.rgb ), dot( ycbcr_to_rgb_mat[ 1 ], col.rgb ), dot( ycbcr_to_rgb_mat[ 2 ], col.rgb ) )	 + ycbcr_to_rgb_vec;

col.bgr = vec3( dot( ycbcr_to_rgb_mat[ 0 ], col.rgb ), dot( ycbcr_to_rgb_mat[ 1 ], col.rgb ), dot( ycbcr_to_rgb_mat[ 2 ], col.rgb ) )	 + ycbcr_to_rgb_vec;


/*
float Y;
float Cb;
float Cr;
float y1;
float y2;


//Cb = col.b;
//y1 = col.g;
//Cr = col.r;
//y2 = col.a;

Y = y1;


Y = col.b;
Cb = col.g;
Cr = col.r;

float Kry = 0.229;
float Kby = 0.114;
float Kgy = 0.5;

//col.r = Cb;
//col.r = Y + Cr;
col.g =Y-(Kby/Kgy)*Cb-(Kry/Kgy)*Cr;
//col.b = Y + Cb;
//col.g = 0.0;
//col.b = 0.0;
col.a = 1.0;

*/

gl_FragColor = col;

}